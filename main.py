import vk_api
import time

from config import vk_token_main, vk_token_beta, mySQL

from vk_api.keyboard import VkKeyboard
from vk_api.longpoll import VkLongPoll, VkEventType

from data import _data as data
from keyboard import _keyboard as kb
from general import _request, _navigation, _botdb


def select_token():
    token = input("–ö—É–¥–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è? \n–ù–∞–ø–∏—à–∏ main –∏–ª–∏ beta \n>>")

    if token == "main":
        print("–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        return(vk_token_main)

    elif token == "beta":
        print("–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        return(vk_token_beta)

    else:
        print("–æ—à–∏–±–∫–∞")
        exit()

def main():
    session = vk_api.VkApi(token=vk_token)
    session_api = session.get_api()

    request = _request(vk_token)
    navigation = _navigation(vk_token)


    base = _botdb(
        host=mySQL["server"],
        username=mySQL["username"],
        secret=mySQL["password"], 
        db_name=mySQL["db_name"]
    )

    def send_message(user_id, message, keyboard=None):
        post = {
            "user_id": user_id,
            "message": message,
            "random_id": 0
        }
        if keyboard != None:
            post["keyboard"] = keyboard.get_keyboard()

        session.method("messages.send", post)

    def send_schedule(x, style):
        send_message(user_id, "–£–∂–µ –∏—â—É", None)
        spisok = request.array()
        if (base.column_info(3, user_id) == "–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫"):
            send_message(user_id, f"–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n{spisok[x]}.")
        else:
            send_message(user_id, f"–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n{spisok[x]} \n\n–í —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã –ø—Ä–∏—à–ª—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º")
            request.download_convert(x, style, user_id)
            send_message(user_id, f"–ù–∞ —ç—Ç–æ–º –ø–æ–∫–∞ –≤—Å–µ!")

    ### ---------------- –¥–æ–ø –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ------------------- ###
    album_id = 281423879
    group_id = 207687870

    dev1_id = 206507284
    dev2_id = 200496247

    k = 0

    err_mes_user = 1

    dev1_alerts = 0
    dev2_alerts = 0

    dev1_err_mes_user = 0
    dev2_err_mes_user = 0

    privet = "0E2C2F0E2F190E2E210E2E1B0E2E1E0E2F1B"

    main_ui_position = "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "–ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏", "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 1", "–∏–≥—Ä—ã", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "–∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"
    course_ui_position = "1 –∫—É—Ä—Å", "2 –∫—É—Ä—Å", "3 –∫—É—Ä—Å", "4 –∫—É—Ä—Å"
    ### ------------------------------------------------- ###

    for event in VkLongPoll(session).listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            text = event.text.lower()
            text_teacher = event.text
            user_id = event.user_id

            keyboard = VkKeyboard(one_time=False)

            if not base.user_id_exists(user_id):
                base.create_user(user_id)
                print(f"–ü–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! ID: {user_id}")

                kb.start(keyboard)
                send_message(user_id, data.start_message, keyboard)

            ### –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é {"–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"}###
            elif (text == "–Ω–∞—á–∞—Ç—å") or (text == "start") or (text == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é") or (base.column_info(2, user_id) in main_ui_position and text == "–Ω–∞–∑–∞–¥"):
                kb.main_menu(keyboard)
                send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard)

                base.set_position(user_id, "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")


            ## —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ {"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"}##
            elif (text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ") or (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "üìÜ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ") or (base.column_info(2, user_id) in course_ui_position and text == "–Ω–∞–∑–∞–¥"):
                kb.schedule(keyboard)
                send_message(user_id, "–í—ã–±–µ—Ä–∏ –∫—É—Ä—Å", keyboard)

                base.set_position(user_id, "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")

            # 1 –∫—É—Ä—Å {"1 –∫—É—Ä—Å"}#
            elif (base.column_info(2, user_id) == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" and text == "1 –∫—É—Ä—Å"):
                send_message(user_id, "–ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥–æ—á–∫—É...")
                kb.FC_schedule(keyboard)
                send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ –Ω–∞—à–µ–ª: \n\n", keyboard)

                base.set_position(user_id, "1 –∫—É—Ä—Å")

            elif text == "—ç–∫–æ–Ω–æ–º–∏–∫–∞ –æ–±-7350-21" or text == "–æ–±-7350-21" or text == "–æ–±735021":
                send_schedule(1, (base.column_info(3, user_id)))

            elif text == "—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –æ–±-230766-21" or text == "–æ–±-230766-21" or text == "–æ–±23076621":
                send_schedule(3, (base.column_info(3, user_id)))
            elif text == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±-7351-21" or text == "–æ–±-7351-21" or text == "–æ–±735121":
                send_schedule(2, (base.column_info(3, user_id)))

            # 2 –∫—É—Ä—Å {"2 –∫—É—Ä—Å"}#
            elif (base.column_info(2, user_id) == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" and text == "2 –∫—É—Ä—Å"):
                send_message(user_id, "–ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥–æ—á–∫—É...")
                kb.SC_schedule(keyboard)
                send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ –Ω–∞—à–µ–ª: \n\n", keyboard)

                base.set_position(user_id, "2 –∫—É—Ä—Å")

            elif text == "—ç–∫–æ–Ω–æ–º–∏–∫–∞ –æ–±-7350-20" or text == "–æ–±-7350-20" or text == "–æ–±735020":
                send_schedule(7, (base.column_info(3, user_id)))

            elif text == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±-7351-20" or text == "–æ–±-7351-20" or text == "–æ–±735120":
                send_schedule(8, (base.column_info(3, user_id)))

            # 3 –∫—É—Ä—Å {"3 –∫—É—Ä—Å"}#
            elif (base.column_info(2, user_id) == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" and text == "3 –∫—É—Ä—Å"):
                send_message(user_id, "–ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥–æ—á–∫—É...")
                kb.TC_schedule(keyboard)
                send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ –Ω–∞—à–µ–ª: \n\n", keyboard)

                base.set_position(user_id, "3 –∫—É—Ä—Å")

            elif text == "—ç–∫–æ–Ω–æ–º–∏–∫–∞ –æ–±-7350-19" or text == "–æ–±-7350-19" or text == "–æ–±735019":
                send_schedule(11, (base.column_info(3, user_id)))

            elif text == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±-7351-19" or text == "–æ–±-7351-19" or text == "–æ–±735119":
                send_schedule(12, (base.column_info(3, user_id)))

            # 4 –∫—É—Ä—Å {"4 –∫—É—Ä—Å"}#
            elif (base.column_info(2, user_id) == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" and text == "4 –∫—É—Ä—Å"):
                send_message(user_id, "–ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥–æ—á–∫—É...")
                kb.FO_schedule(keyboard)
                send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ –Ω–∞—à–µ–ª: \n\n", keyboard)

                base.set_position(user_id, "4 –∫—É—Ä—Å")

            elif text == "—ç–∫–æ–Ω–æ–º–∏–∫–∞ –æ–±-7350-18" or text == "–æ–±-7350-18" or text == "–æ–±735018":
                send_schedule(15, (base.column_info(3, user_id)))

            elif text == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±-7351-18" or text == "–æ–±-7351-18" or text == "–æ–±735118":
                send_schedule(16, (base.column_info(3, user_id)))

            ## –∫–æ–Ω—Ç–∞–∫—Ç—ã ##
            elif (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "üìû –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"):
                kb.contacts(keyboard)
                send_message(user_id, "–∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", keyboard)

                base.set_position(user_id, "–∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π")

            elif (base.column_info(2, user_id) == "–∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π" and text == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫"):
                send_message(user_id, data.contacti_pochta)

            elif (base.column_info(2, user_id) == "–∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π" and text == "–ø–æ–∏—Å–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"):
                send_message(user_id, data.serch_teach)

            elif (base.column_info(2, user_id) == "–∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"):
                if base.teacher_exists(text.title()):
                    send_message(user_id, f"{base.teacher_info(1, text.title())} {base.teacher_info(0, text.title())} {base.teacher_info(2, text.title())} - {base.teacher_info(3, text.title())}")
                else:
                    send_message(user_id, "–Ø —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é.")

            ## –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã ##
            elif (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "üïñ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã"):
                send_message(user_id, data.time_work)

            ## –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ ##
            elif text == "üåê –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏":
                kb.link(keyboard)
                send_message(user_id, data.usseful_sites, keyboard)

                base.set_position(user_id, "–ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏")

            ## –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–∞–Ω—Ö–∏–≥—Å {"–Ω–∞–≤–∏–≥–∞—Ü–∏—è 1"}##
            elif (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "üß≠ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–∞–Ω—Ö–∏–≥—Å") or (base.column_info(2, user_id) == "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 2" and text == "–Ω–∞–∑–∞–¥"):
                kb.navigation(keyboard)
                send_message(user_id, "–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", keyboard)

                base.set_position(user_id, "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 1")

            # –ø–æ–∏—Å–∫ –∫–∞–±–∏–Ω–µ—Ç–∞ #
            elif (base.column_info(2, user_id) == "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 1" and text == "–∏—â—É –∫–∞–±–∏–Ω–µ—Ç"):
                send_message(user_id, data.serch_kab)

            # c—Ö–µ–º–∞ –∫–∞–º–ø—É—Å–∞ #
            elif (base.column_info(2, user_id) == "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 1" and text == "—Å—Ö–µ–º–∞ –∫–∞–º–ø—É—Å–∞"):
                send_message(user_id, "–î–µ—Ä–∂–∏ —Å—Ö–µ–º—É —Ç–µ—Ä—Ä–µ—Ç–æ—Ä–∏–∏ –†–ê–ù–•–∏–ì–°:")
                navigation.send_kampus(user_id)

            # —Å—Ö–µ–º–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ #
            elif (base.column_info(2, user_id) == "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 1" and text == "—Å—Ö–µ–º–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞"):
                kb.scheme_housing(keyboard)
                send_message(user_id, "–í—ã–±–µ—Ä–∏ –∫–æ—Ä–ø—É—Å:", keyboard)

                base.set_position(user_id, "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 2")

            # —Å—Ö–µ–º–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ #
            elif ('/' in text and len(text) < 7):
                send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ –Ω–∞—à–µ–ª:")
                navigation.send_etaj(text, user_id)

            # —Å—Ö–µ–º–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ #
            elif (base.column_info(2, user_id) == "–Ω–∞–≤–∏–≥–∞—Ü–∏—è 2" and "–∫–æ—Ä–ø—É—Å" in text):
                send_message(user_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ –Ω–∞—à–µ–ª:")
                if "1" in text:
                    navigation.send_korpus(1, user_id)
                elif "2" in text:
                    navigation.send_korpus(2, user_id)
                elif "3" in text:
                    navigation.send_korpus(3, user_id)
                elif "5" in text:
                    navigation.send_korpus(5, user_id)
                elif "6" in text:
                    navigation.send_korpus(6, user_id)
                send_message(user_id, "–ù–∞ —ç—Ç–æ–º –≤—Å–µ.")

            ## –ø–æ–≥–æ–¥–∞ ##
            elif (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "‚òÅ –ø–æ–≥–æ–¥–∞"):
                send_message(user_id, request.weather_def())

            ## –∏–≥—Ä—ã ##
            elif (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "üîÆ –∏–≥—Ä—ã"):
                kb.games(keyboard)
                send_message(user_id, "–°–º–æ—Ç—Ä–∏ –∫–∞–∫–∏–µ –∏–≥—Ä—ã —è –∑–Ω–∞—é:", keyboard)

                base.set_position(user_id, "–∏–≥—Ä—ã")

            ## –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ##
            elif (base.column_info(2, user_id) == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" and text == "‚öô –Ω–∞—Å—Ç—Ä–æ–π–∫–∏") or (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª—å" and text == "–Ω–∞–∑–∞–¥"):
                kb.settings(keyboard, (base.column_info(3, user_id)))
                send_message(user_id, "–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫", keyboard)

                base.set_position(user_id, "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

            elif (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" and "—Å—Ç–∏–ª—å" in text):
                kb.style_settings(keyboard, (base.column_info(3, user_id)))
                send_message(user_id, "–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", keyboard)

                base.set_position(user_id, "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª—å")

            elif (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª—å"):
                style_count = 0
                if ("–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π" in text):
                    base.set_type_of_schedule(user_id, "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π")
                    kb.style_settings(keyboard, (base.column_info(3, user_id)))

                elif("—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π" in text):
                    base.set_type_of_schedule(user_id, "—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π")
                    kb.style_settings(keyboard, (base.column_info(3, user_id)))

                elif("–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫" in text):
                    base.set_type_of_schedule(user_id, "–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫")
                    kb.style_settings(keyboard, (base.column_info(3, user_id)))
                    style_count = 1

                if style_count == 0:
                    send_message(user_id, f"–í—ã–±—Ä–∞–Ω {base.column_info(3, user_id)} —Å—Ç–∏–ª—å", keyboard)
                elif style_count == 1:
                    send_message(user_id, f"–í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å {base.column_info(3, user_id)}", keyboard)

            # –∏–¥–µ—è / —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ #
            elif (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" and text == "üí° –∏–¥–µ—è / ü§î —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ"):
                k += 1
                send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é –∏–ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—É—é –æ—à–∏–±–∫—É. –Ø –ø–µ—Ä–µ–¥–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º, —á—Ç–æ —Ç—ã —Ö–æ—á–µ–º –∏–º —á—Ç–æ-—Ç–æ —Å–æ–æ–±—â–∏—Ç—å")

                if dev1_alerts == 1:
                    send_message(dev1_id, f"üí° {user_id}")

                if dev2_alerts == 1:
                    send_message(dev2_id, f"üí° {user_id}")

            # –æ –±–æ—Ç–µ #
            elif (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" and text == "ü§ñ –æ –±–æ—Ç–µ"):
                send_message(user_id, data.o_bote)

            # –≤–æ–ø—Ä–æ—Å—ã / –æ—Ç–≤–µ—Ç—ã #
            elif (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" and text == "‚ùì f.a.q."):
                send_message(user_id, data.faq)

            # –∞–Ω–µ–∫–¥–æ—Ç #
            elif (text == "–∞–Ω–µ–∫–¥–æ—Ç"):
                send_message(user_id, "–ü–æ–º–Ω—é —è –æ–¥–∏–Ω –∞–Ω–µ–∫–¥–æ—Ç, —Å–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∂—É...")
                send_message(user_id, request.joke_def())

            ## dev ##
            elif (base.column_info(2, user_id) == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" and base.column_info(1, user_id) == "owner" and text == "dev"):
                kb.developer(keyboard)
                send_message(user_id, privet, keyboard)

                base.set_position(user_id, "a–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")

            elif (base.column_info(2, user_id) == "a–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" and base.column_info(1, user_id) == "owner"):

                if "err_mes_user" in text:
                    if "–≤–∫–ª" in text:
                        err_mes_user = 1

                        send_message(user_id, "err_mes_user –≤–∫–ª")

                    elif "–≤—ã–∫–ª" in text:
                        err_mes_user = 0

                        send_message(user_id, "err_mes_user –≤—ã–∫–ª")

            elif (err_mes_user == 1):
                send_message(user_id, "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞–∑–∞—Ç—å\n–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é.\n\n –ï—Å–ª–∏ –Ω–Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É '–Ω–∞—á–∞—Ç—å' –∏–ª–∏ 'start' ")

            base.message_count(user_id)
            time.sleep(0.5)



vk_token = select_token()

def main_restart():
    try:
        main()
    except Exception as err:
        print(err)
        time.sleep(1)
        main_restart()


main_restart()

# main()
